openapi: 3.1.0

info:
  title: BitCasino User API
  description: API for user registration, login, profile access, and account management.
  version: 0.1.0

servers:
  - url: https://api.bitcasino.bigdevdog.com/user
    description: Production server

paths:
  /:
    post:
      summary: Register a new user.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        201:
          description: User registered successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        409:
          description: Username/email already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete the signed in user.
      security:
        - bearerAuth: []
      responses:
        204:
          description: Accound deleted successfully.
        401:
          description: Missing or invalid token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /authn:
    get:
      summary: Fetch a user profile based on an authentication token.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Token authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        401:
          description: Missing or invalid token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      summary: Login using a username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: Login successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        400:
          description: Invalid username or password.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http 
      scheme: bearer 
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]

    TokenResponse:
      type: object
      properties:
        token: 
          type: string

    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
          format: email
      required: [username, password, email]

    UserInfo:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
